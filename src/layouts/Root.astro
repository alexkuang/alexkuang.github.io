---
import "src/styles/global.css";
const { title } = Astro.props;
---

<html lang="en" class="h-full [scrollbar-gutter:stable]">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <title>{title}</title>
  </head>
  <body class="h-full bg-gray-100 antialiased dark:bg-gray-900">
    <header class="mx-auto flex max-w-5xl items-center justify-between p-4">
      <div class="font-semibold text-violet-900 dark:text-violet-200"><a href="/">bikeshed.coffee</a></div>

      <div class="flex items-center space-x-4">
        <nav class="space-x-2 font-medium text-gray-700 dark:text-gray-300">
          <!--
          <span><a href="#">about</a></span>
          <span><a href="#">now</a></span>
          -->
        </nav>

        <div class="isolate inline-flex rounded-xs bg-gray-50 dark:bg-gray-900">
          <button
            id="light-theme-button"
            type="button"
            class="relative inline-flex items-center rounded-l-xs px-2 py-1 text-sm font-semibold text-gray-900 ring-1 ring-gray-300 ring-inset hover:bg-gray-200 focus:z-10 dark:text-gray-300 dark:ring-gray-700 dark:hover:bg-gray-800"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="size-6"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M12 3v2.25m6.364.386-1.591 1.591M21 12h-2.25m-.386 6.364-1.591-1.591M12 18.75V21m-4.773-4.227-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z"
              ></path>
            </svg>
          </button>

          <button
            type="button"
            id="dark-theme-button"
            class="relative -ml-px inline-flex items-center px-2 py-1 text-sm font-semibold text-gray-900 ring-1 ring-gray-300 ring-inset hover:bg-gray-200 focus:z-10 dark:text-gray-300 dark:ring-gray-700 dark:hover:bg-gray-800"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="size-5"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M21.752 15.002A9.72 9.72 0 0 1 18 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 0 0 3 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 0 0 9.002-5.998Z"
              ></path>
            </svg>
          </button>

          <button
            type="button"
            id="system-theme-button"
            class="relative -ml-px inline-flex items-center rounded-r-xs px-2 py-1 text-sm font-semibold text-gray-900 ring-1 ring-gray-300 ring-inset hover:bg-gray-200 focus:z-10 dark:text-gray-300 dark:ring-gray-700 dark:hover:bg-gray-800"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="size-5"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25m18 0A2.25 2.25 0 0 0 18.75 3H5.25A2.25 2.25 0 0 0 3 5.25m18 0V12a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 12V5.25"
              ></path>
            </svg>
          </button>
        </div>
      </div>
    </header>
    <main>
      <slot />
    </main>
  </body>

  <script>
    function initTheme() {
      const userTheme = localStorage.theme;
      if (userTheme === "light" || userTheme === "dark") {
        setTheme(userTheme);
      } else {
        setTheme("system");
      }

      ["light", "dark", "system"].forEach((theme) => {
        document.getElementById(`${theme}-theme-button`)?.addEventListener("click", () => {
          setTheme(theme);
        });
      });

      window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (event) => {
        if (localStorage.theme === "system") {
          setTheme("system");
        }
      });
    }

    function setTheme(theme) {
      const css = document.createElement("style");

      css.appendChild(
        document.createTextNode(
          `* {
             -webkit-transition: none !important;
             -moz-transition: none !important;
             -o-transition: none !important;
             -ms-transition: none !important;
             transition: none !important;
          }
        `,
        ),
      );

      document.head.appendChild(css);

      switch (theme) {
        case "light":
          document.documentElement.classList.remove("dark");
          break;
        case "dark":
          document.documentElement.classList.add("dark");
          break;
        default:
          const isDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
          isDark ? document.documentElement.classList.add("dark") : document.documentElement.classList.remove("dark");
      }

      window.getComputedStyle(css).opacity;
      document.head.removeChild(css);

      localStorage.setItem("theme", theme);

      ["light", "dark", "system"].forEach((t) => {
        const button = document.getElementById(`${t}-theme-button`);
        button?.classList.remove("bg-gray-200");
        button?.classList.remove("dark:bg-gray-800");
      });

      const activeButton = document.getElementById(`${theme}-theme-button`);
      activeButton?.classList.add("bg-gray-200");
      activeButton?.classList.add("dark:bg-gray-800");
    }

    document.addEventListener("DOMContentLoaded", () => initTheme());
    document.addEventListener("astro:after-swap", () => initTheme());
  </script>
</html>
